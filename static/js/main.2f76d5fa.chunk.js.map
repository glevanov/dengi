{"version":3,"sources":["components/EditAccount/edit-button.svg","components/DeleteAccount/delete-button.svg","components/CurrencyIcon/RUB.svg","components/CurrencyIcon/USD.svg","components/CurrencyIcon/EUR.svg","store.js","currency.js","components/Total/Total.js","components/Icon/Icon.js","components/EditAccount/EditAccount.js","components/DeleteAccount/DeleteAccount.js","components/CurrencyIcon/CurrencyIcon.js","components/AccountDetails/AccountDetails.js","components/Accounts/Accounts.js","components/Button/Button.js","components/StatusMessage/StatusMessage.js","components/Rates/Rates.js","components/Overview/Overview.js","components/Input/Input.js","components/EditForm/EditForm.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","store","accounts","rates","USD","EUR","localStorage","setItem","JSON","stringify","this","getItem","concat","Object","toConsumableArray","parse","_this","fetch","then","response","json","data","Valute","Value","index","slice","saveAccounts","account","observable","getTotal","currency","rate","filter","it","reduce","acc","amount","formatNum","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","Total","react_default","a","createElement","className","total","getTotalUSD","getTotalEUR","React","Component","decorate","computed","observer","Icon","_ref","color","elementClass","children","onClick","classes","defaultProps","EditAccount","react_router_dom","to","aria-label","Icon_Icon","src","editIcon","alt","width","height","DeleteAccount","deleteAccount","deleteIcon","CurrencyIcon","RUB","selectImage","AccountDetails","type","custodian","list","map","key","AccountDetails_AccountDetails","Button","title","StatusMessage","message","Rates","Overview","loadAccounts","loadRates","Total_Total_Total","components_StatusMessage_StatusMessage","length","components_Accounts_Accounts","Button_Button","components_Rates_Rates","Input","autoComplete","autoFocus","disabled","label","min","name","onChange","placeholder","readOnly","required","step","value","EditForm","_Component","AddAccount","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","evt","target","setState","state","objectSpread","defineProperty","handleAdd","updateAccount","addAccount","readyToSubmit","match","params","inherits","createClass","react_router","Input_Input","style","text-decoration","App","apply","arguments","exact","path","component","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f76d5fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit-button.a041973f.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-button.1e0a35ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/RUB.a9d45a22.svg\";","module.exports = __webpack_public_path__ + \"static/media/USD.58921271.svg\";","module.exports = __webpack_public_path__ + \"static/media/EUR.1d59ac9e.svg\";","import {observable} from 'mobx/lib/mobx';\n\nconst key = 'dengi';\n\nconst store = {\n  accounts: [],\n  rates: {\n    USD: null,\n    EUR: null,\n  },\n};\n\nstore.saveAccounts = function () {\n  localStorage.setItem(key, JSON.stringify(this.accounts));\n};\n\nstore.loadAccounts = function() {\n  if (localStorage.getItem(key)) {\n    this.accounts = [].concat(\n      [...JSON.parse(localStorage.getItem(key))]\n    )\n  }\n};\n\nstore.loadRates = function() {\n  const URL = 'https://www.cbr-xml-daily.ru/daily_json.js';\n  fetch(URL)\n    .then(response => response.json())\n    .then((data) => {\n      this.rates.USD = data.Valute.USD.Value;\n      this.rates.EUR = data.Valute.EUR.Value;\n    });\n};\n\nstore.deleteAccount = function (index) {\n  this.accounts = [].concat(\n    this.accounts.slice(0, index),\n    this.accounts.slice(index + 1)\n  );\n  this.saveAccounts();\n};\n\nstore.addAccount = function (account) {\n  this.accounts = [...this.accounts, account];\n  this.saveAccounts();\n};\n\nstore.updateAccount = function (account, index) {\n  this.accounts = [].concat(\n    this.accounts.slice(0, index),\n    account,\n    this.accounts.slice(index + 1)\n  );\n  this.saveAccounts();\n};\n\nexport default observable(store);\n","const getTotal = (accounts, currency, rate) => rate * accounts\n  .filter(it => it.currency === currency)\n  .reduce((acc, it) => it.amount + acc, 0);\n\nexport const getTotalRUB = accounts => getTotal(accounts, 'RUB', 1);\nexport const getTotalUSD = (accounts, rate) => getTotal(accounts, 'USD', rate);\nexport const getTotalEUR = (accounts, rate) => getTotal(accounts, 'EUR', rate);\n\nexport const formatNum = num => num\n  .toLocaleString('ru-RU', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n  });\n\nexport const getPercentage = (num, total) => {\n  const result = num / total * 100;\n  if (Number.isNaN(result) || result === Infinity) {\n    return 0;\n  }\n  return result;\n};\n","import React from 'react';\nimport store from 'store';\nimport {observer} from 'mobx-react';\nimport {decorate, computed} from 'mobx';\nimport './Total.css';\nimport {getTotalRUB, getTotalUSD, getTotalEUR, formatNum} from 'currency';\n\nexport default class Total extends React.Component {\n  get total() {\n    return formatNum(\n      getTotalRUB(store.accounts)\n      + getTotalUSD(store.accounts, store.rates.USD)\n      + getTotalEUR(store.accounts, store.rates.EUR)\n    );\n  }\n\n  render() {\n    return (\n      <section className=\"total\">\n        <span className=\"total__text\">Итого:</span>\n        {`₽ ${this.total}`}\n      </section>\n    )\n  }\n}\n\ndecorate(Total, {\n  total: computed,\n  Total: observer,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Icon.css';\n\nIcon.propTypes = {\n  color: PropTypes.string,\n  elementClass: PropTypes.string,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nIcon.defaultProps = {\n  color: 'primary',\n};\n\nexport default function Icon(\n  {\n    color,\n    elementClass,\n    children,\n    onClick,\n  }\n) {\n  let classes = 'icon';\n  classes += ` icon--color-${color}`;\n  if (elementClass) {\n    classes += ` ${elementClass}`;\n  }\n\n  return (\n    <div\n      className={classes}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  )\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Icon from 'components/Icon';\nimport editIcon from \"./edit-button.svg\";\n\nEditAccount.propTypes = {\n  index: PropTypes.number.isRequired,\n  elementClass: PropTypes.string,\n};\n\nexport default function EditAccount(\n  {\n    index,\n    elementClass,\n  }\n) {\n  return (\n    <Link\n      to={`/edit/${index}`}\n      aria-label=\"Редактировать\"\n      className={elementClass}\n    >\n      <Icon\n        children={\n          <img src={editIcon}\n               alt=\"Редактировать\"\n               width=\"17\"\n               height=\"auto\"\n          />\n        }\n      />\n    </Link>\n  )\n};\n","import React from 'react';\nimport store from 'store';\nimport PropTypes from 'prop-types';\nimport Icon from 'components/Icon';\nimport deleteIcon from './delete-button.svg'\n\nDeleteAccount.propTypes = {\n  index: PropTypes.number.isRequired,\n  elementClass: PropTypes.string,\n};\n\nexport default function DeleteAccount(\n  {\n    index,\n    elementClass,\n  }\n) {\n  const handleDelete = () => {\n    store.deleteAccount(index);\n  };\n\n  return (\n    <Icon\n      color={'error'}\n      elementClass={elementClass}\n      onClick={handleDelete}\n      children={\n        <img src={deleteIcon}\n             alt=\"Удалить счет\"\n             width=\"17\"\n             height=\"auto\"\n        />\n      }\n    />\n  )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'components/Icon';\nimport RUB from './RUB.svg';\nimport USD from './USD.svg';\nimport EUR from './EUR.svg';\n\nCurrencyIcon.propTypes = {\n  currency: PropTypes.string.isRequired,\n};\n\nexport default function CurrencyIcon(\n  {\n    currency,\n  }\n) {\n  const selectImage = (currency) => {\n    switch(currency) {\n      case 'RUB':\n        return RUB;\n      case 'USD':\n        return USD;\n      case 'EUR':\n        return EUR;\n      default:\n        return currency;\n    }\n  };\n\n  return (\n    <Icon\n      children={\n        <img src={selectImage(currency)}\n             alt={`Код валюты: ${currency}`}\n             width=\"auto\"\n             height=\"22\"\n        />\n      }\n    />\n  )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AccountDetails.css';\nimport {formatNum} from 'currency';\n\nAccountDetails.propTypes = {\n  amount: PropTypes.number.isRequired,\n  type: PropTypes.string,\n  custodian: PropTypes.string,\n  elementClass: PropTypes.string,\n};\n\nexport default function AccountDetails(\n  {\n    amount,\n    type,\n    custodian,\n    elementClass,\n  }\n) {\n  let classes = 'account-details';\n  if (elementClass) {\n    classes += ` ${elementClass}`;\n  }\n\n  return (\n    <p className={classes}>\n      <span className=\"account-details__amount\">{formatNum(amount)}</span>\n      <span className=\"account-details__details\">\n        {type && custodian\n          ? `${type} в ${custodian}`\n          : `${type}${custodian}`\n        }\n      </span>\n    </p>\n  )\n}\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport store from 'store';\nimport './Accounts.css';\nimport EditAccount from 'components/EditAccount';\nimport DeleteAccount from 'components/DeleteAccount';\nimport CurrencyIcon from 'components/CurrencyIcon';\nimport AccountDetails from 'components/AccountDetails';\n\nfunction Accounts() {\n  const list = store.accounts.map((account, index) =>\n    <li\n      key={index}\n      className=\"accounts__item\"\n    >\n      <CurrencyIcon\n        currency={account.currency}\n      />\n      <AccountDetails\n        elementClass={'accounts__text-content'}\n        amount={account.amount}\n        type={account.type}\n        custodian={account.custodian}\n      />\n      <EditAccount\n        elementClass={'accounts__edit'}\n        index={index}\n      />\n      <DeleteAccount\n        elementClass={'accounts__delete'}\n        index={index}\n      />\n    </li>\n  );\n  return (\n    <ul className=\"accounts\">{list}</ul>\n  )\n}\n\nexport default observer(Accounts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css'\n\nButton.propTypes = {\n  elementClass: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default function Button(\n  {\n    elementClass,\n    onClick,\n    title,\n  }\n) {\n  let classes = 'button';\n  if (elementClass) {\n    classes += ` ${elementClass}`;\n  }\n\n  return (\n    <button\n      className={classes}\n      onClick={onClick}\n    >\n      {title}\n    </button>\n  )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './StatusMessage.css';\n\nStatusMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nfunction StatusMessage(\n  {\n    message,\n  }\n) {\n  return (\n    <p className=\"status-message\">\n      {message}\n    </p>\n  )\n}\n\nexport default StatusMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Rates.css';\nimport {formatNum} from 'currency';\n\nRates.propTypes = {\n  USD: PropTypes.number.isRequired,\n  EUR: PropTypes.number.isRequired,\n};\n\nfunction Rates(\n  {\n    USD,\n    EUR,\n  }\n) {\n  return (\n    <p className=\"rates\">\n      <span className=\"rates__currency\">USD:</span> {USD && formatNum(USD)}\n      , <span className=\"rates__currency\">EUR:</span> {EUR && formatNum(EUR)}\n    </p>\n  )\n}\n\nexport default Rates;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {observer} from 'mobx-react';\nimport {decorate} from 'mobx';\nimport store from 'store';\nimport './Overview.css';\nimport Total from 'components/Total';\nimport Accounts from 'components/Accounts';\nimport Button from 'components/Button';\nimport StatusMessage from 'components/StatusMessage';\nimport Rates from 'components/Rates';\n\nexport default class Overview extends React.Component {\n  componentDidMount() {\n    store.loadAccounts();\n    store.loadRates();\n  }\n\n  render() {\n    return (\n      <section className=\"overview\">\n        {\n          (!store.rates.USD || !store.rates.EUR)\n            ? <StatusMessage message=\"Загрузка данных о курсах...\"/>\n            : <Total/>\n        }\n        {\n          (store.accounts.length === 0)\n            ? <StatusMessage message=\"Добавьте счёт чтобы продолжить\"/>\n            : <Accounts/>\n        }\n        <Link\n          to=\"/add/\"\n          className=\"overview__add-account\"\n        >\n          <Button\n            title=\"Добавить счёт\"\n            elementClass=\"button--account\"\n          />\n        </Link>\n        {\n          (store.rates.USD || store.rates.EUR) &&\n            <Rates\n              USD={store.rates.USD}\n              EUR={store.rates.EUR}\n            />\n        }\n      </section>\n    )\n  }\n}\n\ndecorate(Overview, {\n  Overview: observer,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Input.css'\n\nInput.propTypes = {\n  autoComplete: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  disabled: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  min: PropTypes.number,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  step: PropTypes.number,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n};\n\nInput.defaultProps = {\n  type: 'text',\n  autoComplete: false,\n};\n\nexport default function Input(\n  {\n    autoComplete,\n    autoFocus,\n    disabled,\n    label,\n    min,\n    name,\n    onChange,\n    placeholder,\n    readOnly,\n    required,\n    step,\n    type,\n    value,\n  }) {\n\n  return (\n    <label className={'input'}>\n      {`${label}:`}\n      <input\n        className={'input__field'}\n        name={name}\n        type={type}\n        step={`${step}`}\n        min={`${min}`}\n        onChange={onChange}\n        value={value}\n        required={required}\n        autoFocus={autoFocus}\n        autoComplete={`${autoComplete}`}\n        readOnly={readOnly}\n        disabled={disabled}\n        placeholder={placeholder}\n      />\n    </label>\n  )\n};\n","import React, {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {observer} from 'mobx-react';\nimport store from 'store';\nimport Input from 'components/Input';\nimport Button from 'components/Button';\nimport './EditForm.css';\n\nconst EditForm = class AddAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: {\n        currency: 'RUB',\n        custodian: '',\n        type: '',\n        amount: '',\n      },\n      readyToSubmit: false,\n    };\n  }\n\n  handleInputChange = (evt) => {\n    const target = evt.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState(state => ({\n      account: {\n        ...state.account,\n        [name]: value,\n      }\n    }));\n  };\n\n  handleAdd = () => {\n    if (this.index) {\n      store.updateAccount(this.state.account, this.index);\n    } else {\n      store.addAccount(this.state.account);\n    }\n    this.setState({readyToSubmit: true})\n  };\n\n  index = this.props.match.params.index;\n\n  componentDidMount() {\n    // Gets initial state from store if we get an index from route\n    if (this.index) {\n      this.setState({\n        account: {\n          currency: store.accounts[this.index].currency,\n          custodian: store.accounts[this.index].custodian,\n          type: store.accounts[this.index].type,\n          amount: store.accounts[this.index].amount,\n        },\n      });\n    }\n  }\n\n  render() {\n    if (this.state.readyToSubmit) {\n      return <Redirect to=\"/\"/>\n    }\n\n    return (\n      <form className=\"edit-form\">\n        <h2 className=\"edit-form__heading\">\n          {this.index ? 'Редактирование счёта' : 'Добавить счёт'}\n        </h2>\n        <Input\n          className=\"edit-form__input\"\n          label=\"Сумма\"\n          name=\"amount\"\n          onChange={this.handleInputChange}\n          value={this.state.account.amount}\n          required={true}\n          autoFocus={true}\n          type=\"number\"\n          step={0.01}\n          min={0}\n        />\n        <label className=\"edit-form__select\">\n          Валюта\n          <select\n            className=\"edit-form__select-field\"\n            name=\"currency\"\n            value={this.state.account.currency}\n            required={true}\n            onChange={this.handleInputChange}\n          >\n            <option value=\"RUB\">Рубли</option>\n            <option value=\"USD\">Доллары</option>\n            <option value=\"EUR\">Евро</option>\n          </select>\n        </label>\n        <Input\n          className=\"edit-form__input\"\n          label=\"Вид инвестиции\"\n          name=\"type\"\n          onChange={this.handleInputChange}\n          value={this.state.account.type}\n          placeholder=\"Вклад, брокерский счёт\"\n        />\n        <Input\n          className=\"edit-form__input\"\n          label=\"Место хранения\"\n          name=\"custodian\"\n          onChange={this.handleInputChange}\n          value={this.state.account.custodian}\n          placeholder=\"Название банка, брокера\"\n        />\n        <div className=\"edit-form__button-wrap\">\n          <Link\n            to=\"/\"\n            style={{\"text-decoration\": \"none\"}}\n            className={'edit-form__button'}\n          >\n            <Button\n              title={\"Назад\"}\n            />\n          </Link>\n          <Button\n            onClick={this.handleAdd}\n            elementClass={'edit-form__button button--primary'}\n            title={this.index ? 'Сохранить изменения' : 'Добавить счёт'}\n          />\n        </div>\n      </form>\n    )\n  }\n};\n\nexport default observer(EditForm);\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {observer} from 'mobx-react';\nimport Overview from 'components/Overview';\nimport EditForm from 'components/EditForm';\nimport './variables.css';\nimport './page.css';\nimport './App.css';\nimport 'normalize.css';\n\nconst App = class App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={Overview}\n            />\n            <Route\n              path=\"/add\"\n              component={EditForm}\n            />\n            <Route\n              path=\"/edit/:index\"\n              component={EditForm}\n            />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n};\n\nexport default observer(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from 'components/App';\n\nrender(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}